
import json
import traceback
from datetime import datetime
import random
import asyncio

import command_besed
from commands import commands
from api import api_url, api, photo_upload
from punishments import ban_give_out
from api.api_execute import kick


class roulette(commands):

    async def run(self):
        try:
            adm = await self.create_mongo.admin_check(self.from_id, self.peer_id)
            if adm:
                await self.apis.api_post("messages.send", v=self.v, peer_id=self.peer_id,
                                         message=f"üòé –í–´ –ü–û–ë–ï–î–ò–õ–ò, –ë–ï–ó–û–ì–û–í–û–†–û–ß–ù–û –ü–û–ë–ï–î–ò–õ–ò, +1000000–ö–ö–ö–ö–ö –í–ê–ú –ù–ê –°–ß–Å–¢", random_id=0)
                return
            res = await self.create_mongo.profile_users_add(self.from_id)
            if res[1] < -10:
                await self.apis.api_post("messages.send", v=self.v, peer_id=self.peer_id,
                                         message=f"‚õî –í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–æ —É—á–∞—Å—Ç–∏–µ –≤ —Ä—É–ª–µ—Ç–∫–µ. –°–ª–∏—à–∫–æ–º –º–∞–ª–æ –±–∞–ª–ª–æ–≤.",
                                         random_id=0)
                return
            res = await self.create_mongo.profile_users_add(self.from_id, roulette=self.date, f=3)
            if not res[0]:
                timestamp = res[1][0]
                value = datetime.fromtimestamp(timestamp)
                time = value.strftime('%d.%m.%Y %H:%M')
                await self.apis.api_post("messages.send", v=self.v, peer_id=self.peer_id,
                                         message=f"üîå –í–∞—à –ø–∏—Å—Ç–æ–ª–µ—Ç –Ω–∞ –ø–æ–¥–∑–∞—Ä—è–¥–∫–µ, –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –ø–æ—Å–ª–µ {time}", random_id=0)
                return
            if res[0]:
                txt = await self.txt_roulette(self.text)
                if not txt:
                    txt = 1
                if self.is_int(txt):
                    if int(txt) >= 1:
                        if int(txt) < 6:
                            ran = random.randint(1, 6)
                            if ran > int(txt):
                                ach = ""
                                res = await self.create_mongo.profile_users_add(self.from_id, roulette=self.date)
                                bal = await self.create_mongo.profile_users_add(self.from_id, scores=int(txt) * 2)
                                if res[1] in self.roulette_awards:
                                    res_new = await self.create_mongo.profile_users_add(self.from_id,
                                                                                        f"{self.roulette_awards[int(res[1])][0]}",
                                                                                        self.roulette_awards[int(res[1])][1])
                                    ach = f"\n\nüëª [id{self.from_id}|–í—ã] –ø–æ–ª—É—á–∏–ª–∏ –∞—á–∏–≤–∫—É:\n\n{self.roulette_awards[int(res[1])][0]}\n\n" \
                                          f"üìä –†–µ–π—Ç–∏–Ω–≥: {res_new[1]}"
                                else:
                                    ach = f"\n\nüìä –†–µ–π—Ç–∏–Ω–≥: {bal[1]}"
                                await self.apis.api_post("messages.send", v=self.v, peer_id=self.peer_id,
                                                         message=f"ü§† –°–µ–≥–æ–¥–Ω—è —Ñ–æ—Ä—Ç—É–Ω–∞ –Ω–∞ –≤–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ, –≤—ã –ø–æ–±–µ–¥–∏–ª–∏.{ach}",
                                                         random_id=0)
                            else:
                                res = await self.create_mongo.profile_users_add(self.from_id, roulette=self.date, f=4)
                                bal = await self.create_mongo.profile_users_add(self.from_id, scores=-8)
                                # await self.apis.api_post("messages.send", v=self.v, peer_id=self.peer_id,
                                #                          message=f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.{ach}",
                                #                          random_id=0)

                                result = await self.ban_rating(self.from_id, "-5411326", bal[1], self.peer_id,
                                                               "–†–µ–π—Ç–∏–Ω–≥ –¥–æ—Å—Ç–∏–≥ –æ—Ç–º–µ—Ç–∫–∏ –Ω–∏–∂–µ -30", self.date)
                                if not result:
                                    ach = f"\n\nüìä –†–µ–π—Ç–∏–Ω–≥: {bal[1]}"
                                    await self.apis.api_post("messages.send", v=self.v, peer_id=self.peer_id,
                                                             message=f"üò≠ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.{ach}",
                                                             random_id=0)
                                    return
                                else:
                                    await self.apis.api_post("messages.send", v=self.v, peer_id=self.peer_id,
                                                             message=f"{result[1]}",
                                                             random_id=0)
                                # vrem = 86400
                                # cause = "–ü—Ä–æ–∏–≥—Ä—ã—à –≤ —Ä—É–ª–µ—Ç–∫–µ"
                                # ply = await self.display_time(vrem)
                                #result = await ban_give_out(self.v).ban_give(self.apis, self.create_mongo, self.peer_id,
                                #                                              cause,
                                #                                              self.chat_id(),
                                #                                              str(self.from_id), "-5411326", vrem, ply)
                                # await self.apis.api_post("messages.send", v=self.v, peer_id=self.peer_id,
                                #                          message=result[1], random_id=0)

                                if len(result) == 3:
                                    loop = asyncio.get_running_loop()
                                    for i in result[2]:
                                        try:
                                            loop.create_task(
                                                self.apis.api_post("messages.removeChatUser", chat_id=self.chat_id_param(i),
                                                                   member_id=self.from_id,
                                                                   v=self.v))
                                        except:
                                            pass
                                    return

                                if result[0]:
                                    await self.apis.api_post("execute", code=kick(users=[self.from_id], chat_id=self.chat_id()),
                                                             v=self.v)
                                return

                        else:
                            await self.apis.api_post("messages.send", v=self.v, peer_id=self.peer_id,
                                                     message=f"üò≥ –ö–∞–∫ —è —Å—Ç–æ–ª—å–∫–æ –ø—É–ª—å –≤ –±–∞—Ä–∞–±–∞–Ω –∑–∞—Ä—è–∂—É, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–æ–ª—å—é –∏–ª–∏ –¥—Ä–æ–±—å—é, –Ω–æ —Ç–∞–∫ –Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ",
                                                     random_id=0)
                    elif int(txt) == 0:
                        await self.apis.api_post("messages.send", v=self.v, peer_id=self.peer_id,
                                                 message=f"–•–æ–ª–æ—Å—Ç–æ–π –ø–∏—Å—Ç–æ–ª–µ—Ç –Ω–µ –∑–∞—Ä—è–∂–∞–µ–º",
                                                 random_id=0)
                    else:
                        await self.apis.api_post("messages.send", v=self.v, peer_id=self.peer_id,
                                                 message=f"üò≥ –≠—Ç–æ –∫—É–¥–∞ –∂ –º–∏–Ω—É—Å —Ç–æ, –ø—É–ª—è –Ω–∞–∑–∞–¥ –ª–µ—Ç–µ—Ç—å –±—É–¥–µ—Ç??",
                                                 random_id=0)
        except Exception as e:
            print(traceback.format_exc())









roulettes = command_besed.Command()

roulettes.keys = ['/roulette', '/—Ä—É–ª–µ—Ç–∫–∞']
roulettes.description = '–î–ª—è —Ç–µ—Å—Ç–æ–≤'
roulettes.process = roulette
roulettes.topics_blocks = []
roulettes.topics_resolution = ["tema1"]
